name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Add swap to prevent OOM
        run: |
          sudo swapoff -a
          sudo fallocate -l 10G /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile
          free -h

      - name: Set up Docker Compose
        run: docker-compose -f docker-compose.yml up -d

      - name: Initialize Airflow DB
        run: docker-compose exec -T airflow-webserver airflow db init

      - name: Import Airflow Variables
        run: docker-compose exec -T airflow-webserver airflow variables import /opt/airflow/dags/variables.json || true

      # ✅ ここを修正版に置き換え
      - name: Wait for Airflow webserver to be healthy
        run: |
          echo "Waiting for Airflow webserver to be healthy..."
          for i in {1..60}; do
            if curl -sf http://localhost:8080/health | grep -q "\"status\": \"healthy\""; then
              echo "✅ Webserver is healthy!"
              exit 0
            fi
            echo "⏳ Webserver not ready yet... ($i/60)"
            sleep 10
          done

          echo "❌ Webserver did not become healthy in time. Dumping logs..."
          docker-compose ps
          docker-compose logs --tail=100 airflow-webserver
          exit 1

      - name: Test GCS connection
        run: docker-compose exec -T airflow-webserver gsutil ls gs://my-gcs-bucket-2025-demo || exit 1

      - name: Test S3 connection
        run: docker-compose exec -T airflow-webserver aws s3 ls s3://domoproject || exit 1

      - name: Test BigQuery connection
        run: docker-compose exec -T airflow-webserver bq ls striking-yen-470200-u3: | head -n 10 || exit 1

      - name: Trigger DAG run
        run: docker-compose exec -T airflow-webserver airflow dags trigger -d industry_metrics_from_input

      - name: Wait for DAG to finish (max 10 min)
        run: |
          echo "Waiting for DAG to finish..."
          for i in {1..60}; do
            state=$(docker-compose exec -T airflow-webserver airflow dags state industry_metrics_from_input $(date +%Y-%m-%d) | tail -n 1 | awk '{print $2}')
            echo "DAG state: $state"
            if [ "$state" = "success" ]; then
              echo "✅ DAG succeeded"
              exit 0
            elif [ "$state" = "failed" ]; then
              echo "❌ DAG failed"
              docker-compose logs --tail=100 airflow-webserver
              exit 1
            fi
            sleep 10
          done
          echo "❌ Timed out waiting for DAG"
          docker-compose logs --tail=100 airflow-webserver
          exit 1

      - name: Run pytest (check output files)
        run: docker-compose exec -T airflow-webserver pytest tests/

      - name: Tear down
        if: always()
        run: docker-compose down -v
