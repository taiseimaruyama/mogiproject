name: CI for Airflow DAG

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      AIRFLOW_FERNET_KEY: ${{ secrets.AIRFLOW_FERNET_KEY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare local folders (logs, output, input)
        run: |
          mkdir -p logs output input
          chmod -R 777 logs output input

      - name: Install system deps (for google-re2 build)
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake pkg-config libprotobuf-dev protobuf-compiler

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install apache-airflow[celery,postgres,redis]==2.6.3 \
                      apache-airflow-providers-google \
                      apache-airflow-providers-amazon \
                      psycopg2-binary \
                      pandas \
                      boto3 \
                      google-re2

      - name: Initialize Airflow DB + User
        run: docker compose up --abort-on-container-exit --exit-code-from airflow-init airflow-init

      - name: Wait after DB init
        run: sleep 20

      - name: Ensure DB is initialized
        run: docker compose run --rm airflow-cli airflow db check

      - name: Start Airflow
        run: docker compose up -d

      - name: Wait for Airflow components
        run: |
          echo "⏳ Waiting for Airflow..."
          for i in {1..30}; do
            ok=true
            for svc in airflow-webserver airflow-scheduler airflow-worker; do
              if ! docker compose ps $svc | grep "Up"; then
                ok=false
              fi
            done
            [ "$ok" = true ] && echo "✅ Airflow is running" && break
            sleep 10
          done

      - name: Trigger DAG
        run: |
          docker compose run --rm airflow-cli \
            airflow dags trigger --run-id ci_run_${{ github.run_id }} industry_metrics_full_dag

      - name: Show DAG runs (always)
        if: always()
        run: docker compose run --rm airflow-cli airflow dags list-runs -d industry_metrics_full_dag --no-backfill

      - name: Upload artifacts (CSV/Parquet)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dag-outputs
          path: output/*

      - name: Stop containers
        if: always()
        run: docker compose down -v
