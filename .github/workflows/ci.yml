name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Upgrade pip
        run: python -m pip install --upgrade pip setuptools wheel

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Initialize Airflow directories
        run: |
          mkdir -p ./dags ./logs ./plugins ./input ./output
          chmod -R 777 ./logs ./output

      - name: Generate dummy input data
        run: |
          echo "date,sales,stock" > input/retail.csv
          echo "2025-01-01,100,10" >> input/retail.csv
          echo "2025-01-02,120,0"  >> input/retail.csv
          echo "clicks,impressions,spend,revenue" > input/ads.csv
          echo "50,1000,200,400" >> input/ads.csv

      - name: Write gcp-credentials.json
        run: echo '${{ secrets.GCP_CREDENTIALS }}' > ./gcp-credentials.json

      - name: Write .env file for docker-compose
        run: |
          echo "AIRFLOW_UID=50000" > .env

      - name: Run Airflow init
        run: docker compose run --rm airflow-worker airflow db init

      - name: Start Airflow services
        run: docker compose up -d

      - name: Wait for Airflow webserver
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:8080/health | grep '"metadatabase": {"status": "healthy"}'; then
              echo "Airflow webserver is healthy"
              exit 0
            fi
            sleep 10
          done
          echo "Webserver did not become healthy in time" && exit 1

      # ✅ Airflow Variables 設定ステップ
      - name: Set Airflow variables
        run: |
          docker compose exec -T airflow-webserver \
            airflow variables set gcs_bucket ${{ secrets.GCS_BUCKET }}
          docker compose exec -T airflow-webserver \
            airflow variables set s3_bucket ${{ secrets.S3_BUCKET }}

      - name: Debug Airflow logs
        run: docker compose logs airflow-webserver | tail -n 50

      - name: Debug Airflow connections (before DAG run)
        run: docker compose exec -T airflow-webserver airflow connections list || true

      - name: Unpause DAG
        run: docker compose exec -T airflow-webserver airflow dags unpause industry_metrics_full_dag

      - name: Trigger DAG
        run: docker compose exec -T airflow-webserver airflow dags trigger industry_metrics_full_dag --run-id "manual_$(date +%s)"

      - name: Wait after trigger
        run: sleep 60

      # ---------- Task 状態チェック ----------
      - name: Check DAG runs
        run: docker compose exec -T airflow-webserver airflow dags list-runs -d industry_metrics_full_dag -n 5

      - name: Check task state (create_bq_dataset)
        run: docker compose exec -T airflow-webserver airflow tasks state industry_metrics_full_dag create_bq_dataset 2025-01-01 || true

      - name: Debug task logs (create_bq_dataset from worker)
        run: docker compose exec -T airflow-worker cat /opt/airflow/logs/industry_metrics_full_dag/create_bq_dataset/2025-01-01T00:00:00+00:00/1.log || true

      - name: Check task state (preprocess_retail)
        run: docker compose exec -T airflow-webserver airflow tasks state industry_metrics_full_dag preprocess_retail 2025-01-01 || true

      - name: Check task state (calc_retail_metrics)
        run: docker compose exec -T airflow-webserver airflow tasks state industry_metrics_full_dag calc_retail_metrics 2025-01-01 || true

      - name: Check task state (upload_retail_metrics_to_gcs)
        run: docker compose exec -T airflow-webserver airflow tasks state industry_metrics_full_dag upload_retail_metrics_to_gcs 2025-01-01 || true

      - name: Check task state (load_retail_metrics_to_bq)
        run: docker compose exec -T airflow-webserver airflow tasks state industry_metrics_full_dag load_retail_metrics_to_bq 2025-01-01 || true

      - name: Debug Airflow variables
        run: docker compose exec -T airflow-webserver airflow variables list || true

      - name: Debug DAG list
        run: docker compose exec -T airflow-webserver airflow dags list || true

      - name: Debug task logs (upload_retail_metrics_to_gcs from worker)
        run: docker compose exec -T airflow-worker cat /opt/airflow/logs/industry_metrics_full_dag/upload_retail_metrics_to_gcs/2025-01-01T00:00:00+00:00/1.log || true

      - name: Debug task logs (load_retail_metrics_to_bq from worker)
        run: docker compose exec -T airflow-worker cat /opt/airflow/logs/industry_metrics_full_dag/load_retail_metrics_to_bq/2025-01-01T00:00:00+00:00/1.log || true

      - name: Debug DAG import errors
        run: docker compose exec -T airflow-webserver airflow dags import-errors || true

      - name: Debug scheduler logs (full)
        run: docker compose logs airflow-scheduler | tail -n 50 || true

      - name: Debug worker logs (full)
        run: docker compose logs airflow-worker | tail -n 50 || true

      - name: Debug worker logs (detailed)
        run: docker compose exec -T airflow-worker bash -c "ls -R /opt/airflow/logs" || true

      # ---------- 出力確認 ----------
      - name: Check output files
        run: ls -R output || true

      - name: Upload output as artifact
        uses: actions/upload-artifact@v3
        with:
          name: airflow-outputs
          path: output/

      - name: Show logs
        run: docker compose logs | tail -n 200

      - name: Shutdown
        run: docker compose down
