name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. リポジトリ取得
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. メモリ不足対策 (swap 10GB)
      - name: Add swap to prevent OOM
        run: |
          sudo swapoff -a
          sudo fallocate -l 10G /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile
          free -h

      # 3. Docker Compose セットアップ
      - name: Set up Docker Compose
        run: |
          docker compose -f docker-compose.yml up -d
          docker ps -a

      # 4. Airflow DB 初期化
      - name: Initialize Airflow DB
        run: |
          docker compose exec -T airflow-webserver airflow db init

      # 5. Airflow Variables のインポート
      - name: Import Airflow Variables
        run: |
          if [ -f airflow_vars.json ]; then
            docker compose cp airflow_vars.json airflow-webserver:/opt/airflow/airflow_vars.json
            docker compose exec -T airflow-webserver airflow variables import /opt/airflow/airflow_vars.json
          else
            echo "No airflow_vars.json found, skipping import."
          fi

      # 6. Airflow Webserver 起動待ち
      - name: Wait for Airflow webserver to be ready
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:8080/health | grep '"metadatabase":.*"healthy"' > /dev/null; then
              echo "✅ Airflow webserver is ready"
              exit 0
            fi
            echo "Waiting for Airflow webserver..."
            sleep 10
          done
          echo "❌ Airflow webserver did not become ready in time"
          exit 1

      # 7. DAG 実行トリガー
      - name: Trigger DAG run
        run: |
          docker compose exec -T airflow-webserver \
            airflow dags trigger industry_metrics_from_input

      # 8. DAG 完了待ち (30分)
      - name: Wait for DAG to finish (max 30 min)
        run: |
          echo "Checking DAG runs for industry_metrics_from_input"
          for i in {1..180}; do  # 最大30分 (180 * 10秒)
            state=$(docker compose exec -T airflow-webserver \
              airflow dags list-runs -d industry_metrics_from_input --no-backfill --output json | jq -r '.[0].state' || echo "not_found")
            echo "Current state: $state"
            if [[ "$state" == "success" ]]; then
              echo "✅ DAG finished successfully"
              exit 0
            elif [[ "$state" == "failed" ]]; then
              echo "❌ DAG failed"
              exit 1
            fi
            sleep 10
          done
          echo "⏰ Timed out waiting for DAG to finish (30 min limit)"
          exit 1

      # 9. pytest 実行
      - name: Run pytest (check output files)
        run: |
          docker compose exec -T airflow-webserver pytest tests/ || true

      # 10. 後始末
      - name: Tear down
        if: always()
        run: |
          docker compose down -v
