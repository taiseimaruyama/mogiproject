name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Set up job
        run: echo "Start CI job"

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Add swap to prevent OOM
        run: |
          sudo fallocate -l 10G /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile
          free -h

      # ---- Docker Compose を使って Airflow 起動 ----
      - name: Set up Docker Compose
        run: |
          docker compose -f docker-compose.yml up -d
          docker ps -a

      # ---- Airflow Webserver の Healthy 判定 ----
      - name: Wait for Airflow webserver to be healthy
        run: |
          echo "Waiting for Airflow webserver to be healthy..."
          for i in {1..60}; do
            if docker compose ps | grep "healthy"; then
              echo "✅ Airflow webserver is healthy"
              exit 0
            else
              echo "⏳ Webserver not ready yet..."
              sleep 10
            fi
          done
          echo "❌ Timeout: Airflow webserver did not become healthy"
          docker compose logs
          exit 1

      # ---- GCS 接続テスト ----
      - name: Test GCS connection
        run: |
          docker compose exec -T airflow-webserver \
            airflow connections get google_cloud_default || true

      # ---- S3 接続テスト ----
      - name: Test S3 connection
        run: |
          docker compose exec -T airflow-webserver \
            airflow connections get aws_default || true

      # ---- BigQuery 接続テスト ----
      - name: Test BigQuery connection
        run: |
          docker compose exec -T airflow-webserver \
            airflow connections get bigquery_default || true

      # ---- DAG 実行 ----
      - name: Trigger DAG run
        run: |
          docker compose exec -T airflow-webserver \
            airflow dags trigger industry_metrics_from_input

      # ---- DAG 完了待機 (10分) ----
      - name: Wait for DAG to finish (max 10 min)
        run: |
          echo "Waiting for DAG to finish..."
          for i in {1..60}; do
            state=$(docker compose exec -T airflow-webserver \
              airflow dags state industry_metrics_from_input $(date +%Y-%m-%d) | tail -n 1)
            echo "Current DAG state: $state"
            if [[ "$state" == *"success"* ]]; then
              echo "✅ DAG finished successfully"
              exit 0
            elif [[ "$state" == *"failed"* ]]; then
              echo "❌ DAG failed"
              docker compose logs
              exit 1
            else
              sleep 10
            fi
          done
          echo "❌ Timeout waiting for DAG"
          docker compose logs
          exit 1

      # ---- Pytest 実行 ----
      - name: Run pytest (check output files)
        run: |
          docker compose exec -T airflow-webserver pytest tests || true

      # ---- 終了処理 ----
      - name: Tear down
        if: always()
        run: docker compose down -v
