name: CI - Airflow PoC

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  e2e-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose curl

      - name: Start Airflow with Docker Compose
        run: |
          docker-compose up -d
          echo "⏳ Waiting for Airflow containers to start..."
          sleep 30
          docker ps -a

      - name: Initialize Airflow DB
        run: |
          WEBSERVER=$(docker ps --format "{{.Names}}" | grep webserver)
          echo "Initializing Airflow DB in $WEBSERVER"
          docker exec $WEBSERVER airflow db init

      - name: Wait for Airflow webserver to be ready
        run: |
          WEBSERVER=$(docker ps --format "{{.Names}}" | grep webserver)
          echo "Found Airflow webserver container: $WEBSERVER"
          for i in {1..30}; do
            if docker exec $WEBSERVER curl -s http://localhost:8080/health | grep '"status":"healthy"'; then
              echo "✅ Airflow webserver is ready!"
              break
            fi
            echo "⏳ Waiting for webserver... ($i)"
            sleep 10
          done

      - name: Trigger Airflow DAG
        run: |
          WEBSERVER=$(docker ps --format "{{.Names}}" | grep webserver)
          echo "Triggering DAG in container: $WEBSERVER"
          docker exec $WEBSERVER airflow dags trigger -d industry_metrics_full
          echo "⏳ Waiting for DAG execution..."
          sleep 180
          docker exec $WEBSERVER airflow dags list-runs -d industry_metrics_full --output json || true

      - name: Run pytest (check output)
        run: |
          pip install pytest pandas
          pytest -v
