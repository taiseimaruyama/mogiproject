name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Upgrade pip
        run: python -m pip install --upgrade pip setuptools wheel

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Initialize Airflow directories
        run: |
          sudo mkdir -p ./logs ./dags ./plugins ./input ./output
          sudo chmod -R 777 ./logs ./dags ./plugins ./input ./output

      # ✅ ダミーデータ生成
      - name: Generate dummy input data
        run: |
          mkdir -p input
          echo "date,product,sales,stock" > input/retail.csv
          echo "2025-01-01,A,100,10" >> input/retail.csv
          echo "2025-01-02,A,120,0" >> input/retail.csv
          echo "date,impressions,clicks,spend,revenue" > input/ads.csv
          echo "2025-01-01,1000,50,200,500" >> input/ads.csv
          echo "2025-01-02,800,20,100,150" >> input/ads.csv

      - name: Run Airflow init
        run: docker compose run --rm airflow-init

      # ✅ GCP & AWS 接続設定（Secrets利用）
      - name: Set Airflow Connections (GCP & AWS)
        run: |
          docker compose up -d airflow-webserver
          sleep 20

          echo '${{ secrets.GCP_CREDENTIALS }}' > gcp_key.json
          docker compose cp gcp_key.json airflow-webserver:/opt/airflow/gcp_key.json

          docker compose exec -T airflow-webserver bash -c "
            airflow connections delete google_cloud_default || true
            airflow connections add google_cloud_default \
              --conn-type google-cloud-platform \
              --conn-extra '{\"extra__google_cloud_platform__key_path\": \"/opt/airflow/gcp_key.json\", \"extra__google_cloud_platform__scope\": \"https://www.googleapis.com/auth/cloud-platform\"}'
          "

          docker compose exec -T airflow-webserver bash -c "
            airflow connections delete aws_default || true
            airflow connections add aws_default \
              --conn-type aws \
              --conn-extra '{\"extra__aws_access_key_id\": \"${{ secrets.AWS_ACCESS_KEY_ID }}\", \"extra__aws_secret_access_key\": \"${{ secrets.AWS_SECRET_ACCESS_KEY }}\", \"region_name\": \"${{ secrets.AWS_REGION }}\"}'
          "

          docker compose down

      - name: Set Airflow Variables
        run: |
          docker compose up -d airflow-webserver
          sleep 20
          docker compose exec -T airflow-webserver \
            airflow variables set gcs_bucket ${{ secrets.GCS_BUCKET }}
          docker compose exec -T airflow-webserver \
            airflow variables set s3_bucket ${{ secrets.S3_BUCKET }}
          docker compose down

      - name: Start Airflow services
        run: |
          docker compose up -d --build airflow-webserver airflow-scheduler airflow-worker

      - name: Wait for Airflow webserver
        run: |
          for i in {1..90}; do
            if docker compose exec -T airflow-webserver curl -s http://localhost:8080/health | grep -q "healthy"; then
              echo "Airflow is healthy!"
              exit 0
            fi
            echo "Waiting for Airflow... ($i/90)"
            sleep 10
          done
          echo "Airflow did not become healthy in time."
          docker compose logs
          exit 1

      - name: Debug Airflow logs
        run: |
          docker compose ps || true
          docker compose logs airflow-webserver || true
          docker compose logs airflow-scheduler || true

      - name: Debug Airflow connections (before DAG run)
        run: docker compose exec -T airflow-webserver airflow connections list

      - name: Unpause DAG
        run: docker compose exec -T airflow-webserver airflow dags unpause industry_metrics_full_dag

      - name: Trigger DAG
        run: |
          docker compose exec -T airflow-webserver \
            airflow dags trigger -e 2025-01-01 industry_metrics_full_dag

      - name: Wait after trigger
        run: sleep 30

      - name: Check DAG runs
        run: |
          docker compose exec -T airflow-webserver \
            airflow dags list-runs -d industry_metrics_full_dag | tail -n 20

      - name: Check task state (preprocess_ads)
        run: docker compose exec -T airflow-webserver airflow tasks state industry_metrics_full_dag preprocess_ads 2025-01-01

      - name: Check task state (calc_ads_metrics)
        run: docker compose exec -T airflow-webserver airflow tasks state industry_metrics_full_dag calc_ads_metrics 2025-01-01

      - name: Check task state (upload_ads_metrics_to_s3)
        run: docker compose exec -T airflow-webserver airflow tasks state industry_metrics_full_dag upload_ads_metrics_to_s3 2025-01-01

      - name: Check task state (upload_retail_metrics_to_gcs)
        run: docker compose exec -T airflow-webserver airflow tasks state industry_metrics_full_dag upload_retail_metrics_to_gcs 2025-01-01

      # ✅ タスク詳細ログ確認 (古い Airflow 用に直接ファイルを cat)
      - name: Debug task logs (upload_retail_metrics_to_gcs)
        run: |
          docker compose exec -T airflow-webserver \
            cat /opt/airflow/logs/dag_id=industry_metrics_full_dag/task_id=upload_retail_metrics_to_gcs/2025-01-01T00:00:00+00:00/1.log || true

      - name: Debug task logs (upload_ads_metrics_to_s3)
        run: |
          docker compose exec -T airflow-webserver \
            cat /opt/airflow/logs/dag_id=industry_metrics_full_dag/task_id=upload_ads_metrics_to_s3/2025-01-01T00:00:00+00:00/1.log || true

      - name: Debug DAG list
        run: docker compose exec -T airflow-scheduler airflow dags list

      - name: Debug tasks list
        run: docker compose exec -T airflow-scheduler airflow tasks list industry_metrics_full_dag

      - name: Debug DAG import errors
        run: docker compose exec -T airflow-scheduler airflow dags list-import-errors || true

      - name: Debug scheduler logs (full)
        run: docker compose logs airflow-scheduler || true

      - name: Debug worker logs (full)
        run: docker compose logs airflow-worker || true

      - name: Debug worker logs (upload tasks)
        run: docker compose logs airflow-worker | grep "upload_" || true

      # ✅ 追加: ワーカー詳細ログ
      - name: Debug worker logs (detailed)
        run: |
          echo "------ airflow-worker full logs ------"
          docker compose logs airflow-worker || true
          echo "------ last 300 lines ------"
          docker compose logs --tail=300 airflow-worker || true

      - name: Check output files
        run: |
          docker compose exec -T airflow-webserver ls -l /opt/airflow/output || true
          docker compose exec -T airflow-webserver cat /opt/airflow/output/*.csv || true

      - name: Upload output as artifact
        uses: actions/upload-artifact@v4
        with:
          name: airflow-output
          path: ./output/*.csv

      - name: Show logs
        run: docker compose logs --tail=200

      - name: Shutdown
        if: always()
        run: docker compose down
