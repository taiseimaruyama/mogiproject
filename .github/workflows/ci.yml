name: Airflow CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Debug docker-compose
        run: docker compose version

      - name: Initialize Airflow DB
        run: |
          echo "üöÄ Initializing Airflow metadata database..."
          docker compose run --rm airflow-init

      - name: Start Airflow with Docker Compose
        run: docker compose up -d

      - name: Show running containers
        run: docker compose ps -a

      - name: Wait for Airflow components to be ready (with logs)
        run: |
          echo "‚è≥ Waiting for Airflow webserver + scheduler + worker..."
          for i in {1..30}; do
            ok_web=$(docker compose exec -T airflow-webserver airflow jobs check --job-type SchedulerJob || true)
            ok_sched=$(docker compose exec -T airflow-scheduler airflow jobs check --job-type SchedulerJob || true)
            ok_work=$(docker compose logs airflow-worker | tail -n 20 || true)

            if echo "$ok_sched" | grep -q "running"; then
              echo "‚úÖ Scheduler running"
            fi
            if echo "$ok_web" | grep -q "running"; then
              echo "‚úÖ Webserver running"
            fi
            if echo "$ok_work" | grep -q "ready"; then
              echo "‚úÖ Worker running"
              exit 0
            fi

            echo "‚è≥ Still waiting... ($i)"
            sleep 10
          done
          echo "‚ùå Airflow components not ready after timeout"
          exit 1

      - name: Trigger DAG
        run: |
          docker compose exec -T airflow-webserver \
            airflow dags trigger -r ci_run_${{ github.run_id }} industry_metrics_full_dag

      - name: Wait for DAG completion (30 min)
        run: |
          echo "Monitoring DAG Run (latest run)"
          for i in {1..90}; do
            latest=$(docker compose exec -T airflow-webserver \
              airflow dags list-runs -d industry_metrics_full_dag --no-backfill | head -n 5 | tail -n 1)
            echo "Latest run: $latest"
            if echo "$latest" | grep -q "success"; then
              echo "‚úÖ DAG finished successfully"
              exit 0
            elif echo "$latest" | grep -q "failed"; then
              echo "‚ùå DAG failed"
              exit 1
            fi
            sleep 20
          done
          echo "‚ùå DAG did not finish in 30 minutes"
          exit 1

      - name: Stop containers
        if: always()
        run: docker compose down -v
