name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Upgrade pip
        run: python -m pip install --upgrade pip setuptools wheel

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Initialize Airflow directories
        run: |
          sudo mkdir -p ./logs ./dags ./plugins ./input ./output
          sudo chmod -R 777 ./logs ./dags ./plugins ./input ./output

      # ✅ GCP Credentials をファイル化
      - name: Write GCP credentials to file
        run: |
          echo '${{ secrets.GCP_CREDENTIALS }}' > gcp_key.json

      # ✅ Docker Compose 用環境ファイル
      - name: Create .env file for docker-compose
        run: |
          echo "AIRFLOW__CORE__FERNET_KEY=${{ secrets.AIRFLOW_FERNET_KEY }}" >> .env
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> .env
          echo "GCS_BUCKET=${{ secrets.GCS_BUCKET }}" >> .env
          echo "S3_BUCKET=${{ secrets.S3_BUCKET }}" >> .env
          echo "GOOGLE_APPLICATION_CREDENTIALS=/opt/airflow/gcp_key.json" >> .env

      - name: Run Airflow init
        run: docker compose --env-file .env run --rm airflow-init

      - name: Start Airflow services
        run: docker compose --env-file .env up -d --build airflow-webserver airflow-scheduler airflow-worker
