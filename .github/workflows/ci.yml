name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # ✅ pip キャッシュ
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Upgrade pip
        run: python -m pip install --upgrade pip setuptools wheel

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Initialize Airflow directories
        run: |
          sudo mkdir -p ./logs ./dags ./plugins ./input ./output
          sudo chmod -R 777 ./logs ./dags ./plugins ./input ./output

      - name: Run Airflow init
        run: |
          docker compose run --rm airflow-init

      # ✅ Airflow Variables を追加
      - name: Set Airflow Variables
        run: |
          docker compose up -d airflow-webserver
          sleep 20
          docker compose exec -T airflow-webserver \
            airflow variables set gcs_bucket my-bucket-name
          docker compose down

      - name: Start Airflow services
        run: |
          docker compose up -d --build airflow-webserver airflow-scheduler airflow-worker

      - name: Wait for Airflow webserver
        run: |
          for i in {1..90}; do
            if docker compose exec -T airflow-webserver curl -s http://localhost:8080/health | grep -q "healthy"; then
              echo "Airflow is healthy!"
              exit 0
            fi
            echo "Waiting for Airflow... ($i/90)"
            sleep 10
          done
          echo "Airflow did not become healthy in time."
          docker compose logs
          exit 1

      - name: Debug Airflow logs
        run: |
          echo "=== docker compose ps ==="
          docker compose ps || true
          echo
          echo "=== airflow-webserver logs ==="
          docker compose logs airflow-webserver || true
          echo
          echo "=== airflow-scheduler logs ==="
          docker compose logs airflow-scheduler || true

      - name: Trigger DAG
        run: |
          docker compose exec -T airflow-webserver \
            airflow dags trigger -e 2025-01-01 industry_metrics_full_dag

      - name: Wait after trigger
        run: sleep 30

      - name: Check DAG runs
        run: |
          docker compose exec -T airflow-webserver \
            airflow dags list-runs -d industry_metrics_full_dag | tail -n 20

      - name: Check task state (preprocess_ads)
        run: |
          docker compose exec -T airflow-webserver \
            airflow tasks state industry_metrics_full_dag preprocess_ads 2025-01-01

      - name: Check task state (calc_ads_metrics)
        run: |
          docker compose exec -T airflow-webserver \
            airflow tasks state industry_metrics_full_dag calc_ads_metrics 2025-01-01

      # === 追加デバッグ ===
      - name: Debug DAG list
        run: docker compose exec -T airflow-scheduler airflow dags list

      - name: Debug tasks list
        run: docker compose exec -T airflow-scheduler airflow tasks list industry_metrics_full_dag

      - name: Debug DAG import errors
        run: docker compose exec -T airflow-scheduler airflow dags list-import-errors || true

      - name: Unpause DAG
        run: docker compose exec -T airflow-webserver airflow dags unpause industry_metrics_full_dag

      - name: Debug scheduler task dispatch
        run: docker compose logs airflow-scheduler | grep "Sending task" || true

      - name: Debug worker task reception
        run: docker compose logs airflow-worker | grep "Task" || true
      # ====================

      - name: Check output files
        run: |
          docker compose exec -T airflow-webserver ls -l /opt/airflow/output || true
          docker compose exec -T airflow-webserver cat /opt/airflow/output/*.csv || true

      - name: Show logs
        run: docker compose logs --tail=200

      - name: Shutdown
        if: always()
        run: docker compose down
