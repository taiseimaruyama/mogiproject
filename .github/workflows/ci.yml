name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: airflow
          POSTGRES_PASSWORD: airflow
          POSTGRES_DB: airflow
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U airflow"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
      redis:
        image: redis:6
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.8"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Prepare logs dir
        run: |
          mkdir -p logs
          chmod -R 777 logs

      - name: Set environment variables
        run: |
          echo "AIRFLOW__CORE__LOAD_EXAMPLES=False" >> $GITHUB_ENV
          echo "AIRFLOW__CORE__FERNET_KEY=$(openssl rand -base64 32)" >> $GITHUB_ENV
          echo "AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=False" >> $GITHUB_ENV
          echo "AIRFLOW__CORE__DAG_CONCURRENCY=1" >> $GITHUB_ENV

      - name: Start Airflow
        run: docker compose up -d --build

      - name: Wait for Airflow DB ready
        run: |
          for i in {1..30}; do
            if docker compose run --rm airflow-cli airflow db check; then
              echo "✅ Airflow DB is ready"
              break
            fi
            echo "Waiting for Airflow DB..."
            sleep 10
          done

      - name: Wait for webserver health
        run: |
          for i in {1..30}; do
            if docker compose exec airflow-webserver curl -sf http://localhost:8080/health; then
              echo "✅ Airflow webserver is healthy"
              break
            fi
            echo "Waiting for Airflow webserver..."
            sleep 10
          done

      - name: Show airflow-init logs (always)
        if: always()
        run: docker compose logs airflow-init

      - name: Trigger DAG run
        run: |
          run_id=$(docker compose run --rm airflow-cli \
            airflow dags trigger industry_metrics_full_dag --run-id ci_run_$(date +%s))
          echo "Triggered DAG with run_id=$run_id"

      - name: Show DAG runs (always)
        if: always()
        run: docker compose run --rm airflow-cli \
          airflow dags list-runs -d industry_metrics_full_dag --no-backfill

      - name: Show task states for latest DAG run
        run: |
          run_id=$(docker compose run --rm airflow-cli \
            airflow dags list-runs -d industry_metrics_full_dag --no-backfill \
            | awk 'NR==3 {print $2}')
          if [ -z "$run_id" ]; then
            echo "⚠️ No DAG run found, skipping task states"
          else
            docker compose run --rm airflow-cli \
              airflow tasks states-for-dag-run industry_metrics_full_dag "$run_id"
          fi

      - name: Upload output as artifact
        uses: actions/upload-artifact@v4
        with:
          name: airflow-output
          path: output/

      - name: Show airflow logs (always)
        if: always()
        run: docker compose logs

      - name: Shutdown services
        if: always()
        run: docker compose down -v
