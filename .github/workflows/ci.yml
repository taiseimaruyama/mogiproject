name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 40

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Upgrade pip
        run: python -m pip install --upgrade pip setuptools wheel

      - name: Install dependencies
        run: pip install -r requirements.txt

      # ---------------------------
      # Airflow用ディレクトリ準備
      # ---------------------------
      - name: Initialize Airflow directories
        run: |
          mkdir -p ./dags ./logs ./plugins ./input ./output

      # ---------------------------
      # GCP 認証キーをSecretsから展開
      # ---------------------------
      - name: Write gcp_credentials.json
        run: |
          echo '${{ secrets.GCP_CREDENTIALS_JSON }}' > gcp_credentials.json

      # ---------------------------
      # .envファイル作成
      # ---------------------------
      - name: Write .env file
        run: |
          echo "AIRFLOW_UID=50000" >> .env
          echo "AIRFLOW_GID=0" >> .env
          echo "GOOGLE_APPLICATION_CREDENTIALS=/opt/airflow/gcp_credentials.json" >> .env
          echo "GCS_BUCKET=my-gcs-bucket-2025-demo" >> .env
          echo "S3_BUCKET=domoproject" >> .env
          echo "AIRFLOW__CORE__FERNET_KEY=${{ secrets.AIRFLOW_FERNET_KEY }}" >> .env
          echo "AIRFLOW__CORE__LOAD_EXAMPLES=False" >> .env

      # ---------------------------
      # ダミーデータ生成
      # ---------------------------
      - name: Generate dummy input data
        run: |
          mkdir -p input
          echo "date,sales,stock" > input/retail.csv
          echo "2025-01-01,100,10" >> input/retail.csv
          echo "2025-01-02,150,0" >> input/retail.csv
          echo "2025-01-03,200,5" >> input/retail.csv

          echo "impressions,clicks,spend,revenue" > input/ads.csv
          echo "1000,50,200,400" >> input/ads.csv
          echo "2000,30,300,200" >> input/ads.csv

      # ---------------------------
      # Airflow Init
      # ---------------------------
      - name: Run Airflow init
        run: |
          docker compose run --rm \
            -e GOOGLE_APPLICATION_CREDENTIALS=/opt/airflow/gcp_credentials.json \
            -e AIRFLOW__CORE__FERNET_KEY=${{ secrets.AIRFLOW_FERNET_KEY }} \
            -e GCS_BUCKET=my-gcs-bucket-2025-demo \
            -e S3_BUCKET=domoproject \
            -v ${{ github.workspace }}/gcp_credentials.json:/opt/airflow/gcp_credentials.json \
            airflow-init

      # ---------------------------
      # Airflow サービス起動
      # ---------------------------
      - name: Start Airflow services
        run: docker compose up -d

      - name: Wait for Airflow webserver
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:8080/health | grep -q '"status":"healthy"'; then
              echo "Airflow webserver is healthy"
              exit 0
            fi
            echo "Waiting for Airflow..."
            sleep 10
          done
          exit 1

      # ---------------------------
      # Debug Logs
      # ---------------------------
      - name: Debug Airflow logs
        run: docker compose logs airflow-webserver | tail -n 200 || true

      - name: Debug Airflow connections (before DAG run)
        run: docker compose exec -T airflow-webserver airflow connections list || true

      # ---------------------------
      # DAG実行
      # ---------------------------
      - name: Unpause DAG
        run: docker compose exec -T airflow-webserver airflow dags unpause industry_metrics_full_dag

      - name: Trigger DAG
        run: docker compose exec -T airflow-webserver airflow dags trigger industry_metrics_full_dag

      - name: Wait after trigger
        run: sleep 60

      - name: Check DAG runs
        run: docker compose exec -T airflow-webserver airflow dags list-runs -d industry_metrics_full_dag

      # ---------------------------
      # Taskごとの確認
      # ---------------------------
      - name: Check task state (preprocess_ads)
        run: docker compose exec -T airflow-webserver airflow tasks state industry_metrics_full_dag preprocess_ads 2025-01-01 || true

      - name: Check task state (calc_ads_metrics)
        run: docker compose exec -T airflow-webserver airflow tasks state industry_metrics_full_dag calc_ads_metrics 2025-01-01 || true

      - name: Check task state (upload_ads_metrics_to_s3)
        run: docker compose exec -T airflow-webserver airflow tasks state industry_metrics_full_dag upload_ads_metrics_to_s3 2025-01-01 || true

      - name: Check task state (upload_retail_metrics_to_gcs)
        run: docker compose exec -T airflow-webserver airflow tasks state industry_metrics_full_dag upload_retail_metrics_to_gcs 2025-01-01 || true

      # ---------------------------
      # Workerログの詳細
      # ---------------------------
      - name: Debug task logs (upload_retail_metrics_to_gcs from worker)
        run: docker compose exec -T airflow-worker cat /opt/airflow/logs/industry_metrics_full_dag/upload_retail_metrics_to_gcs/2025-01-01/1.log || true

      - name: Debug task logs (upload_ads_metrics_to_s3 from worker)
        run: docker compose exec -T airflow-worker cat /opt/airflow/logs/industry_metrics_full_dag/upload_ads_metrics_to_s3/2025-01-01/1.log || true

      - name: Debug DAG list
        run: docker compose exec -T airflow-webserver airflow dags list || true

      - name: Debug task list
        run: docker compose exec -T airflow-webserver airflow tasks list industry_metrics_full_dag || true

      # ---------------------------
      # Outputファイル確認
      # ---------------------------
      - name: Check output files
        run: ls -l output || true

      - name: Upload output as artifact
        uses: actions/upload-artifact@v3
        with:
          name: output-csv
          path: output/*.csv

      # ---------------------------
      # Stop Services
      # ---------------------------
      - name: Show logs
        run: docker compose logs --tail=200 || true

      - name: Shutdown
        run: docker compose down
