name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Add swap to prevent OOM
        run: |
          sudo fallocate -l 10G /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile
          free -h

      - name: Set up Docker Compose
        run: |
          docker-compose -f docker-compose.yml up -d
          docker ps -a

      - name: Wait for Airflow webserver to be healthy
        run: |
          echo "Waiting for Airflow webserver to be healthy..."
          # ログをバックグラウンドで流す
          docker-compose logs -f airflow-webserver &
          LOG_PID=$!

          for i in {1..60}; do
            if curl -sf http://localhost:8080/health | grep -q "\"status\": \"healthy\""; then
              echo "✅ Webserver is healthy!"
              kill $LOG_PID || true
              exit 0
            fi
            echo "⏳ Webserver not ready yet... ($i/60)"
            sleep 10
          done

          echo "❌ Webserver did not become healthy in time."
          kill $LOG_PID || true
          exit 1

      - name: Test GCS connection
        run: |
          echo "Testing GCS connection..."
          gsutil ls gs://my-gcs-bucket-2025-demo

      - name: Test S3 connection
        run: |
          echo "Testing S3 connection..."
          aws s3 ls s3://domoproject

      - name: Test BigQuery connection
        run: |
          echo "Testing BigQuery connection..."
          bq ls striking-yen-470200-u3:sales_dataset

      - name: Trigger DAG run
        run: |
          docker-compose exec -T airflow-webserver airflow dags trigger industry_metrics_from_input

      - name: Wait for DAG to finish (max 10 min)
        run: |
          echo "⏳ Waiting for DAG industry_metrics_from_input to finish..."
          for i in {1..20}; do
            STATE=$(docker-compose exec -T airflow-webserver \
              airflow dags state industry_metrics_from_input $(date +%Y-%m-%d) | tail -n 1)
            echo "DAG state: $STATE"
            if [[ "$STATE" == "success" ]]; then
              echo "✅ DAG finished successfully"
              exit 0
            fi
            sleep 30
          done
          echo "❌ DAG did not complete in time"
          exit 1

      - name: Run pytest (check output files)
        run: |
          docker-compose exec -T airflow-webserver pytest tests/

      - name: Tear down
        if: always()
        run: |
          docker-compose down -v
