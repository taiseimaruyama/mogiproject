name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Set up job
        run: echo "üöÄ Starting CI job..."

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Add swap to prevent OOM
        run: |
          echo "Adding 10GB swap..."
          sudo fallocate -l 10G /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile
          free -h

      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
          docker-compose -f docker-compose.yml up -d

      - name: Wait for Airflow webserver to be healthy
        run: |
          echo "Waiting for Airflow webserver..."
          # follow logs in background
          docker-compose logs -f airflow-webserver & 
          LOGS_PID=$!

          timeout=600   # ÊúÄÂ§ß 10ÂàÜ
          interval=10
          elapsed=0
          healthy=false

          while [ $elapsed -lt $timeout ]; do
            if docker-compose exec -T airflow-webserver curl -s http://localhost:8080/health | grep -q '"status":"healthy"'; then
              echo "‚úÖ Airflow webserver is healthy"
              healthy=true
              break
            else
              echo "‚è≥ Webserver not ready yet..."
            fi
            sleep $interval
            elapsed=$((elapsed + interval))
          done

          kill $LOGS_PID || true

          if [ "$healthy" = false ]; then
            echo "‚ùå Airflow webserver did not become healthy in time"
            exit 1
          fi

      - name: Test GCS connection
        run: |
          echo "Testing GCS connection..."
          gsutil ls gs://my-gcs-bucket-2025-demo || exit 1

      - name: Test S3 connection
        run: |
          echo "Testing S3 connection..."
          aws s3 ls s3://domoproject || exit 1

      - name: Test BigQuery connection
        run: |
          echo "Testing BigQuery connection..."
          bq ls striking-yen-470200-u3: || exit 1

      - name: Trigger DAG run
        run: |
          echo "Triggering DAG..."
          docker-compose exec -T airflow-webserver airflow dags trigger industry_metrics_from_input

      - name: Wait for DAG to finish (max 10 min)
        run: |
          echo "Waiting for DAG to finish..."
          timeout=600
          interval=30
          elapsed=0
          finished=false

          while [ $elapsed -lt $timeout ]; do
            state=$(docker-compose exec -T airflow-webserver airflow dags state industry_metrics_from_input $(date +%Y-%m-%d) | tail -n 1 | awk '{print $2}')
            echo "Current DAG state: $state"
            if [ "$state" = "success" ]; then
              echo "‚úÖ DAG completed successfully"
              finished=true
              break
            fi
            sleep $interval
            elapsed=$((elapsed + interval))
          done

          if [ "$finished" = false ]; then
            echo "‚ùå DAG did not complete in time"
            exit 1
          fi

      - name: Run pytest (check output files)
        run: |
          echo "Running pytest..."
          docker-compose exec -T airflow-webserver pytest /opt/airflow/tests

      - name: Tear down
        if: always()
        run: |
          echo "Cleaning up..."
          docker-compose down -v
