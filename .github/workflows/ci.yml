name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AIRFLOW_FERNET_KEY: ${{ secrets.AIRFLOW_FERNET_KEY }}

    services:
      docker:
        image: docker:20.10-dind
        options: --privileged

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Debug docker-compose
        run: docker compose config

      - name: Set up GCP credentials
        run: |
          mkdir -p keys
          echo '${{ secrets.GCP_CREDENTIALS }}' > keys/gcp.json

      - name: Initialize Airflow DB
        run: docker compose run --rm airflow-init

      - name: Start Airflow with Docker Compose
        run: docker compose up -d

      - name: Wait for Airflow webserver to be healthy
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:8080/health | grep '"status": "healthy"'; then
              echo "‚úÖ Airflow is healthy"
              exit 0
            fi
            echo "‚è≥ Still waiting... ($i)"
            sleep 5
          done
          echo "‚ùå Airflow did not become healthy in time"
          exit 1

      - name: Trigger DAG
        run: |
          RUN_ID="ci_run_$(date +%s)"
          echo "Triggering DAG with run_id=$RUN_ID"
          docker compose exec -T airflow-webserver airflow dags trigger -r $RUN_ID industry_metrics_full_dag
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV

      - name: Wait for DAG completion (30 min)
        run: |
          echo "Monitoring DAG Run (latest run)"
          for i in {1..90}; do
            latest=$(docker compose exec -T airflow-webserver \
              airflow dags list-runs -d industry_metrics_full_dag --no-backfill | grep "$RUN_ID" | head -n 1)
            echo "Latest run: $latest"

            if echo "$latest" | grep "success"; then
              echo "‚úÖ DAG finished successfully"
              exit 0
            elif echo "$latest" | grep "failed"; then
              echo "‚ùå DAG failed"
              exit 1
            elif echo "$latest" | grep "running"; then
              echo "‚è≥ DAG still running..."
            fi

            sleep 20
          done
          echo "‚è∞ DAG did not finish in 30 minutes"
          exit 1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Test GCS connection
        run: |
          docker compose exec -T airflow-webserver gsutil ls gs://${{ secrets.GCS_BUCKET }} || true

      - name: Test S3 connection
        run: aws s3 ls s3://domoproject || true

      - name: Test BigQuery connection
        run: |
          docker compose exec -T airflow-webserver \
            bq query --use_legacy_sql=false "SELECT 1" || true

      - name: Upload output files to S3
        if: always()
        run: |
          echo "üì§ Uploading files in ./output to S3..."
          ls -R output || echo "‚ö†Ô∏è output directory not found"
          if [ -d output ]; then
            aws s3 cp output/ s3://domoproject/ --recursive
          else
            echo "‚ö†Ô∏è No output directory found"
          fi
