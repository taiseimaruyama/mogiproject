name: CI for Airflow DAG

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      AIRFLOW_FERNET_KEY: ${{ secrets.AIRFLOW_FERNET_KEY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize Airflow DB + User
        run: docker compose up --abort-on-container-exit --exit-code-from airflow-init airflow-init

      - name: Wait after DB init
        run: sleep 20

      - name: Ensure DB is initialized
        run: docker compose run --rm airflow-cli airflow db check

      - name: Set Airflow Variables
        run: |
          docker compose run --rm airflow-cli airflow variables set gcs_bucket ${{ secrets.GCS_BUCKET }}
          docker compose run --rm airflow-cli airflow variables set bq_dataset sales_dataset
          docker compose run --rm airflow-cli airflow variables set s3_bucket ${{ secrets.S3_BUCKET }}

      - name: Start Airflow
        run: docker compose up -d

      - name: Wait for Airflow components
        run: |
          echo "⏳ Waiting for Airflow..."
          for i in {1..30}; do
            ok=true
            for svc in airflow-webserver airflow-scheduler airflow-worker; do
              if ! docker compose ps $svc | grep "Up"; then
                ok=false
              fi
            done
            [ "$ok" = true ] && echo "✅ Airflow is running" && break
            sleep 10
          done

      - name: Check DAG import errors
        run: docker compose run --rm airflow-cli airflow dags list-import-errors || true

      - name: List DAGs
        run: docker compose run --rm airflow-cli airflow dags list

      - name: Prepare dummy input data
        run: |
          mkdir -p input
          echo "date,sales,stock" > input/retail.csv
          echo "2025-01-01,100,50" >> input/retail.csv
          echo "2025-01-02,80,0" >> input/retail.csv

          echo "clicks,impressions,revenue,spend" > input/ads.csv
          echo "10,100,200,50" >> input/ads.csv
          echo "5,50,100,25" >> input/ads.csv

      - name: Unpause DAG
        run: docker compose run --rm airflow-cli airflow dags unpause industry_metrics_full_dag

      - name: Trigger DAG
        run: |
          docker compose run --rm airflow-cli \
            airflow dags trigger --run-id ci_run_${{ github.run_id }} industry_metrics_full_dag

      - name: Wait for DAG completion (with debug)
        run: |
          echo "⏳ Monitoring DAG Run"
          for i in {1..3}; do   # 3回チェック → 約1分で終了
            latest=$(docker compose run --rm airflow-cli \
              airflow dags list-runs -d industry_metrics_full_dag --no-backfill | head -n 5 | tail -n 1)
            echo "Latest: $latest"

            if echo "$latest" | grep "success"; then
              echo "✅ DAG finished successfully"
              break
            elif echo "$latest" | grep "failed"; then
              echo "❌ DAG failed"
              docker compose run --rm airflow-cli \
                airflow tasks states-for-dag-run industry_metrics_full_dag $(echo $latest | awk '{print $3}')
              exit 1
            fi
            sleep 20
          done

      - name: Upload output files to S3
        run: aws s3 cp ./output s3://${{ secrets.S3_BUCKET }}/ --recursive

      - name: Show airflow-init logs (always)
        if: always()
        run: docker compose logs airflow-init

      - name: Show scheduler logs (always)
        if: always()
        run: docker compose logs airflow-scheduler

      - name: Show worker logs (always)
        if: always()
        run: docker compose logs airflow-worker

      - name: Stop containers
        if: always()
        run: docker compose down -v
