name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Add swap to prevent OOM
        run: |
          sudo fallocate -l 10G /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile
          free -h

      # ✅ Fernet key をランダム生成
      - name: Generate Fernet key
        run: |
          echo "FERNET_KEY=$(openssl rand -base64 32)" >> $GITHUB_ENV

      - name: Set up Docker Compose
        run: docker compose -f docker-compose.yml up -d

      - name: Wait for Airflow webserver to be healthy
        run: |
          echo "Waiting for Airflow webserver..."
          for i in {1..30}; do
            if docker compose exec -T airflow-webserver curl -sf http://localhost:8080/health; then
              echo "✅ Airflow webserver is healthy"
              exit 0
            fi
            echo "⏳ Webserver not ready yet..."
            sleep 20
          done
          echo "❌ Airflow webserver did not become healthy"
          docker compose logs airflow-webserver
          exit 1

      - name: Test GCS connection
        run: |
          echo "Testing GCS..."
          docker compose exec -T airflow-webserver gsutil ls || true

      - name: Test S3 connection
        run: |
          echo "Testing S3..."
          docker compose exec -T airflow-webserver aws s3 ls || true

      - name: Test BigQuery connection
        run: |
          echo "Testing BigQuery..."
          docker compose exec -T airflow-webserver bq ls || true

      - name: Trigger DAG run
        run: |
          docker compose exec -T airflow-webserver airflow dags trigger industry_metrics_from_input

      - name: Wait for DAG to finish (max 10 min)
        run: |
          echo "Waiting for DAG state..."
          for i in {1..30}; do
            state=$(docker compose exec -T airflow-webserver airflow dags state industry_metrics_from_input $(date +%Y-%m-%d) | tail -n 1 | awk '{print $2}')
            echo "DAG state: $state"
            if [ "$state" = "success" ]; then
              echo "✅ DAG finished successfully"
              exit 0
            elif [ "$state" = "failed" ]; then
              echo "❌ DAG failed"
              docker compose logs airflow-webserver
              exit 1
            fi
            sleep 20
          done
          echo "❌ DAG did not finish in time"
          docker compose logs airflow-webserver
          exit 1

      - name: Run pytest (check output files)
        run: |
          docker compose exec -T airflow-webserver pytest /opt/airflow/tests

      - name: Tear down
        if: always()
        run: docker compose down -v
