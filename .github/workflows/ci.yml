name: build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: airflow
          POSTGRES_PASSWORD: airflow
          POSTGRES_DB: airflow
        # ports: 👈 削除（GitHub Actionsでは不要）
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:latest
        # ports: 👈 削除（GitHub Actionsでは不要）
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: ${{ secrets.AIRFLOW_FERNET_KEY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install apache-airflow[celery,postgres,redis]==2.6.3 \
                      apache-airflow-providers-google \
                      apache-airflow-providers-amazon \
                      psycopg2-binary \
                      pandas \
                      boto3

      - name: Run Airflow init
        run: |
          docker compose run airflow-init

      - name: Show airflow-init logs (always)
        if: always()
        run: docker compose logs airflow-init

      - name: Run scheduler
        run: docker compose up -d airflow-scheduler

      - name: Run worker
        run: docker compose up -d airflow-worker

      - name: Run webserver
        run: docker compose up -d airflow-webserver

      - name: Show scheduler logs (always)
        if: always()
        run: docker compose logs airflow-scheduler

      - name: Show worker logs (always)
        if: always()
        run: docker compose logs airflow-worker

      - name: Show webserver logs (always)
        if: always()
        run: docker compose logs airflow-webserver

      - name: Wait for DAG completion (with debug)
        run: |
          sleep 10
          docker compose ps
          docker compose logs --tail=200

      - name: Upload output files to S3
        if: always()
        run: |
          aws s3 cp ./output s3://${{ secrets.S3_BUCKET }}/ci-output/ --recursive

      - name: Stop containers
        if: always()
        run: docker compose down
